<?php
/**
 *
 * @copyright Copyright (c) 2015, Google Inc.
 * @link      http://www.google.com/recaptcha
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
// Initiate the autoloader. The file should be generated by Composer.
// You will provide your own autoloader or require the files directly if you did
// not install via Composer.
//require_once __DIR__ . '/../vendor/autoload.php';
require_once 'autoload.php';

// Register API keys at https://www.google.com/recaptcha/admin
$siteKey = '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI';
$secret = '6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe';

// reCAPTCHA supported 40+ languages listed here: https://developers.google.com/recaptcha/docs/language
$lang = 'en';
	
//  use for debugging
//  echo '<tt><pre>'.var_export($_POST).'</pre></tt>';

if (isset($_POST['g-recaptcha-response'])):
	// In production, *always* sanitise and validate your input'
	// *Validate Input*//
	
	$post_resp = filter_input(INPUT_POST, 'g-recaptcha-response', FILTER_SANITIZE_STRING);
	
	// echo '<tt><pre>'.var_export($post_resp).'</pre></tt>';
	// If the form submission includes the "g-captcha-response" field
	// Create an instance of the service using your secret
    $recaptcha = new \ReCaptcha\ReCaptcha($secret);

	// If file_get_contents() is locked down on your PHP installation to disallow
	// its use with URLs, then you can use the alternative request method instead.
	// This makes use of fsockopen() instead.
	//  $recaptcha = new \ReCaptcha\ReCaptcha($secret, new \ReCaptcha\RequestMethod\SocketPost());

	// Make the call to verify the response and also pass the user's IP address
    $resp = $recaptcha->verify($post_resp, $_SERVER['REMOTE_ADDR']);

    if ($resp->isSuccess()):
		// If the response is a success, that's it!
		echo json_encode(array('success' => 'yes', 'server_out' => 'xxmail@xxaddr.xx'));
    else:
		// If it's not successful, then one or more error codes will be returned.
		$err_code = "";
		foreach ($resp->getErrorCodes() as $code) {
            $err_code .= $code."  ";
        }
		echo json_encode(array('success' => 'no', 'server_out' => "Error: $err_code<br/>Try Again"));
		/**<p>Check the error code reference at <tt><a href="https://developers.google.com/recaptcha/docs/verify#error-code-reference">https://developers.google.com/recaptcha/docs/verify#error-code-reference</a></tt>. */
    endif;
endif;
?>
